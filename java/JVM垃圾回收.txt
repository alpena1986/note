JVM的垃圾收集

  JVM一共提供了4中垃圾搜集器供选择。
  他们的共同点就是都把堆分成新生代和老年代，并且快速地搜集新生代的垃圾。
  
  
  ■串行搜集器（Serial Collector）
   当此搜集器工作的时候，会阻塞其他所有线程。
   可以使用以下JVM参数打开此搜集器
   -XX:+UseSerialGC
   
  ■吞吐量搜集器/并行搜集器（Parallel / Throughput collector）
   此搜集器使用多个线程搜集垃圾。
   不管是执行minor gc还是full gc，都会停止所有应用的线程。
   适用于能够忍受程序暂停的应用，这些应用尝试去优化，使搜集器使用更少的cpu。
   
  ■The CMS Collector
  
  ■The G1 Collector
  
  
  

垃圾搜集动作的分类

  ■Minor GC
   搜集新生代的垃圾
   
  ■Major GC
    搜集老年代的垃圾
	许多Major GC是由Minor GC触发的
	
  ■Full GC
    清理整个堆空间，包括新生代和老年代
	包括PermGen
	
	
	
内存泄漏

  Java的内存泄漏与C++中的内存泄漏有本质的不同。
  C++的内存需要程序员手动释放，而JAVA却由GC负责。Java中的内存泄漏是说，程序让GC误认为该内存空间暂时无法回收。
  
  其中最重要的一个就是：
    长生命周期的对象，持有短生命周期中生存的对象的引用。

  解决的办法，主要是在对象不再被使用时，将变量的值设置为NULL。
  
 